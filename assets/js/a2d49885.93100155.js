"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4109],{8432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(5893),o=t(1151);const i={sidebar_position:1},c="Create an ICS chain with Spawn",r={id:"consumer-development/create-with-spawn",title:"Create an ICS chain with Spawn",description:"Requirements",source:"@site/docs/consumer-development/create-with-spawn.md",sourceDirName:"consumer-development",slug:"/consumer-development/create-with-spawn",permalink:"/interchain-security/consumer-development/create-with-spawn",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"x/ccv/democracy",permalink:"/interchain-security/build/modules/democracy"},next:{title:"Developing an ICS consumer chain",permalink:"/interchain-security/consumer-development/app-integration"}},a={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Modify your chain",id:"modify-your-chain",level:2},{value:"List your chain",id:"list-your-chain",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"create-an-ics-chain-with-spawn",children:"Create an ICS chain with Spawn"}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://go.dev/doc/install",children:(0,s.jsx)(n.code,{children:"go 1.22+"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:(0,s.jsx)(n.code,{children:"Docker"})})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/rollchains/spawn/blob/release/v0.50/docs/versioned_docs/version-v0.50.x/01-setup/01-system-setup.md",children:"MacOS + Ubuntu Setup"})}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This tutorial focuses on using the Spawn CLI to create an ICS consumer chain. For more complete documentation on Spawn, see the ",(0,s.jsx)(n.a,{href:"https://rollchains.github.io/spawn/v0.50/",children:"Spawn documentation"}),"."]}),"\n",(0,s.jsx)(n.p,{children:'In this tutorial, we\'ll create and interact with a new Interchain security enabled blockchain called "consumer", with the token denomination "uconsu".'}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install Spawn"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Install from latest source\ngit clone https://github.com/rollchains/spawn.git --depth 1 --branch v0.50.10\n\n# Change to this directory\ncd spawn\n\n# Clear Go modules cache for a fresh install\ngo clean -modcache\n\n# Install Spawn\nmake install\n\n# Install Local Interchain (testnet runner)\nmake get-localic\n\n# Install docker container builder\nmake get-heighliner\n\n# Verify installations were successful\nspawn\n\nlocal-ic\n\nheighliner\n\n# If you get \"command 'spawn' not found\", run the following\n# Linux / Windows / Some MacOS\necho 'export PATH=$PATH:$(go env GOPATH)/bin' >> ~/.bashrc\nsource ~/.bashrc\n\n# MacOS\necho 'export PATH=$PATH:$(go env GOPATH)/bin' >> ~/.zshrc\nsource ~/.zshrc\n\n# Legacy MacOS Go\necho 'export PATH=$PATH:$HOME/go/bin' >> ~/.zshrc\nsource ~/.zshrc\n\n# Sometimes it can be good to also clear your cache\n# especially WSL users\ngo clean -cache\n\n\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Create your chain using the ",(0,s.jsx)(n.code,{children:"spawn"})," command and customize it to your needs!"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"GITHUB_USERNAME=<your github username>\n\nspawn new consumer \\\n--consensus=interchain-security \\\n--bech32=consu \\\n--denom=uconsu \\\n--bin=consumerd \\\n--disabled=tokenfactory,ibc-packetforward,ibc-ratelimit,cosmwasm,wasm-light-client \\\n--org=${GITHUB_USERNAME}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"NOTE:"})," ",(0,s.jsx)(n.code,{children:"spawn"})," creates a ready to use repository complete with ",(0,s.jsx)(n.code,{children:"git"})," and GitHub CI. It can be quickly pushed to a new repository getting you and your team up and running quickly."]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Spin up a local testnet for your chain"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"cd consumer\n\n# Starts 2 networks for the IBC testnet at http://127.0.0.1:8080.\n# - Builds the docker image of your chain\n# - Launches a testnet with IBC automatically connected and relayed\n#\n# Note: you can run a single node, non IBC testnet, with `make sh-testnet`.\nmake testnet\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Open a new terminal window and send a transaction on your new chain"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'# list the keys that have been provisioned with funds in genesis\nconsumerd keys list\n\n# send a transaction from one account to another\nconsumerd tx bank send acc0 $(consumerd keys show acc1 -a) 1337uconsu --chain-id=localchain-1\n\n# enter "y" to confirm the transaction\n# then query your balances tfor proof the transaction executed successfully\nconsumerd q bank balances $(consumerd keys show acc1 -a)\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"(optional) Send an IBC transaction"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# submit a cross chain transfer from acc0 to the other address\nconsumerd tx ibc-transfer transfer transfer channel-0 cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr 7uconsu --from=acc0 --chain-id=localchain-1 --yes\n\n# Query the other side to confirm it went through\nsleep 10\n\n# Interact with the other chain without having to install the cosmos binary\n# - Endpoints found at: GET http://127.0.0.1:8080/info\nlocal-ic interact localcosmos-1 query 'bank balances cosmos1hj5fveer5cjtn4wd6wstzugjfdxzl0xpxvjjvr' --api-endpoint=http://127.0.0.1:8080\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"6",children:["\n",(0,s.jsx)(n.li,{children:"Push your new chain to a github repository"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Create a new repository on GitHub from the gh cli\ngh repo create ics-consumer --source=. --remote=origin --push\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["You can also push it the old fashioned way with ",(0,s.jsx)(n.a,{href:"https://github.com/new",children:"https://github.com/new"})," and ",(0,s.jsx)(n.code,{children:"git push origin main"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In this tutorial, we configured a new custom chain, launched a testnet for it, tested a simple token transfer, and confirmed it was successful.\nThis tutorial demonstrates just how easy it is to create a brand new custom Cosmos-SDK blockchain from scratch, saving developers time."}),"\n",(0,s.jsx)(n.h2,{id:"modify-your-chain",children:"Modify your chain"}),"\n",(0,s.jsxs)(n.p,{children:["New module code is usually added in the ",(0,s.jsx)(n.code,{children:"x/"})," directory of your repository.\nCheck out the ",(0,s.jsx)(n.a,{href:"https://docs.cosmos.network/v0.50/build/building-modules/intro",children:"Cosmos SDK documentation"})," for more information on how to add modules to your chain."]}),"\n",(0,s.jsx)(n.p,{children:"Once you're ready you can preview your chain using the section below."}),"\n",(0,s.jsx)(n.h2,{id:"list-your-chain",children:"List your chain"}),"\n",(0,s.jsxs)(n.p,{children:["You can ",(0,s.jsx)(n.a,{href:"https://forge.cosmos.network/list-your-chain",children:"list your chain on Forge"}),", even if it's not finished, in the ",(0,s.jsx)(n.strong,{children:"pre-launch"})," stage."]})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var s=t(7294);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);