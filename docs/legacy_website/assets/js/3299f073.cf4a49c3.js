"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8756],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?o.createElement(h,r(r({ref:t},p),{},{components:n})):o.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5142:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4,title:"Equivocation governance proposal"},r="ADR 003: Equivocation governance proposal",s={unversionedId:"adrs/adr-003-equivocation-gov-proposal",id:"version-v2.4.0-lsm/adrs/adr-003-equivocation-gov-proposal",title:"Equivocation governance proposal",description:"Changelog",source:"@site/versioned_docs/version-v2.4.0-lsm/adrs/adr-003-equivocation-gov-proposal.md",sourceDirName:"adrs",slug:"/adrs/adr-003-equivocation-gov-proposal",permalink:"/interchain-security/legacy/v2.4.0-lsm/adrs/adr-003-equivocation-gov-proposal",draft:!1,tags:[],version:"v2.4.0-lsm",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Equivocation governance proposal"},sidebar:"tutorialSidebar",previous:{title:"Jail Throttling",permalink:"/interchain-security/legacy/v2.4.0-lsm/adrs/adr-002-throttle"},next:{title:"Cryptographic verification of equivocation evidence",permalink:"/interchain-security/legacy/v2.4.0-lsm/adrs/adr-005-cryptographic-equivocation-verification"}},l={},c=[{value:"Changelog",id:"changelog",level:2},{value:"Status",id:"status",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2},{value:"Positive",id:"positive",level:3},{value:"Negative",id:"negative",level:3},{value:"Neutral",id:"neutral",level:3},{value:"References",id:"references",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"adr-003-equivocation-governance-proposal"},"ADR 003: Equivocation governance proposal"),(0,a.kt)("h2",{id:"changelog"},"Changelog"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2023-02-06: Initial draft")),(0,a.kt)("h2",{id:"status"},"Status"),(0,a.kt)("p",null,"Accepted"),(0,a.kt)("h2",{id:"context"},"Context"),(0,a.kt)("p",null,"We want to limit the possibilities of a consumer chain to execute actions on the provider chain to maintain and ensure optimum security of the provider chain."),(0,a.kt)("p",null,"For instance, a malicious consumer consumer chain can send slash packet to the provider chain, which will slash a validator without the need of providing an evidence."),(0,a.kt)("h2",{id:"decision"},"Decision"),(0,a.kt)("p",null,"To protect against a malicious consumer chain, slash packets unrelated to downtime are ignored by the provider chain. Thus, an other mechanism is required to punish validators that have committed a double-sign on a consumer chain."),(0,a.kt)("p",null,"A new kind of governance proposal is added to the ",(0,a.kt)("inlineCode",{parentName:"p"},"provider")," module, allowing to slash and tombstone a validator for double-signing in case of any harmful action on the consumer chain."),(0,a.kt)("p",null,"If such proposal passes, the proposal handler delegates to the ",(0,a.kt)("inlineCode",{parentName:"p"},"evidence")," module to process the equivocation. This module ensures the evidence isn\u2019t too old, or else ignores it (see ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/blob/21021b837882d1d40f1d79bcbc4fad2e79a3fefe/x/evidence/keeper/infraction.go#L54-L62"},"code"),"). ",(0,a.kt)("em",{parentName:"p"},"Too old")," is determined by 2 consensus params : "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"evidence.max_age_duration")," number of nanoseconds before an evidence is considered too old"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"evidence.max_age_numblocks")," number of blocks before an evidence is considered too old.")),(0,a.kt)("p",null,"On the hub, those parameters are equals to "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'// From https://cosmos-rpc.polkachu.com/consensus_params?height=13909682\n(...)\n"evidence": {\n    "max_age_num_blocks": "1000000",\n    "max_age_duration": "172800000000000",\n  (...)\n},\n(...)\n')),(0,a.kt)("p",null,"A governance proposal takes 14 days, so those parameters must be big enough so the evidence provided in the proposal is not ignored by the ",(0,a.kt)("inlineCode",{parentName:"p"},"evidence")," module when the proposal passes and is handled by the hub."),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"max_age_num_blocks=1M"),", the parameter is big enough if we consider the hub produces 12k blocks per day (",(0,a.kt)("inlineCode",{parentName:"p"},"blocks_per_year/365 = 436,0000/365"),"). The evidence can be up to 83 days old (",(0,a.kt)("inlineCode",{parentName:"p"},"1,000,000/12,000"),") and not be ignored."),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"max_age_duration=172,800,000,000,000"),", the parameter is too low, because the value is in nanoseconds so it\u2019s 2 days. Fortunately the condition that checks those 2 parameters uses a ",(0,a.kt)("strong",{parentName:"p"},"AND"),", so if ",(0,a.kt)("inlineCode",{parentName:"p"},"max_age_num_blocks")," condition passes, the evidence won\u2019t be ignored."),(0,a.kt)("h2",{id:"consequences"},"Consequences"),(0,a.kt)("h3",{id:"positive"},"Positive"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Remove the possibility from a malicious consumer chain to \u201cattack\u201d the provider chain by slashing/jailing validators."),(0,a.kt)("li",{parentName:"ul"},"Provide a more acceptable implementation for the validator community.")),(0,a.kt)("h3",{id:"negative"},"Negative"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Punishment action of double-signing isn\u2019t \u201cautomated\u201d, a governance proposal is required which takes more time."),(0,a.kt)("li",{parentName:"ul"},"You need to pay 250ATOM to submit an equivocation evidence.")),(0,a.kt)("h3",{id:"neutral"},"Neutral"),(0,a.kt)("h2",{id:"references"},"References"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PR that ignores non downtime slash packet : ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/cosmos/interchain-security/pull/692"},"https://github.com/cosmos/interchain-security/pull/692")),(0,a.kt)("li",{parentName:"ul"},"PR that adds the governance slash proposal: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/cosmos/interchain-security/pull/703"},"https://github.com/cosmos/interchain-security/pull/703"))))}d.isMDXComponent=!0}}]);