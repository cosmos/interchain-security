// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: interchain_security/ccv/consumer/v1/genesis.proto

package types

import (
	fmt "fmt"
	_ "github.com/cometbft/cometbft/abci/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	_ "github.com/cosmos/ibc-go/v7/modules/core/04-channel/types"
	_ "github.com/cosmos/ibc-go/v7/modules/light-clients/07-tendermint"
	types "github.com/cosmos/interchain-security/v3/x/ccv/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GenesisState defines the CCV consumer genesis state
//
// Note this type is only used on consumer side and references shared type with consumer
// TODO: rename to GenesisState
type PrivateConsumerGenesisState struct {
	Params types.ConsumerParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	// Client ID of the provider. Empty for a new chain, filled in on restart.
	ProviderClientId string `protobuf:"bytes,2,opt,name=provider_client_id,json=providerClientId,proto3" json:"provider_client_id,omitempty"`
	// Channel ID of the provider. Empty for a new chain, filled in on restart.
	ProviderChannelId string `protobuf:"bytes,3,opt,name=provider_channel_id,json=providerChannelId,proto3" json:"provider_channel_id,omitempty"`
	// true for new chain, false for chain restart.
	NewChain bool `protobuf:"varint,4,opt,name=new_chain,json=newChain,proto3" json:"new_chain,omitempty"`
	// MaturingPackets nil on new chain, filled in on restart.
	MaturingPackets []types.MaturingVSCPacket `protobuf:"bytes,7,rep,name=maturing_packets,json=maturingPackets,proto3" json:"maturing_packets"`
	// HeightToValsetUpdateId nil on new chain, filled in on restart.
	HeightToValsetUpdateId []types.HeightToValsetUpdateID `protobuf:"bytes,9,rep,name=height_to_valset_update_id,json=heightToValsetUpdateId,proto3" json:"height_to_valset_update_id"`
	// OutstandingDowntimes nil on new chain, filled  in on restart.
	OutstandingDowntimeSlashing []types.OutstandingDowntime `protobuf:"bytes,10,rep,name=outstanding_downtime_slashing,json=outstandingDowntimeSlashing,proto3" json:"outstanding_downtime_slashing"`
	// PendingConsumerPackets nil on new chain, filled in on restart.
	PendingConsumerPackets types.ConsumerPacketDataList `protobuf:"bytes,11,opt,name=pending_consumer_packets,json=pendingConsumerPackets,proto3" json:"pending_consumer_packets"`
	// LastTransmissionBlockHeight nil on new chain, filled in on restart.
	LastTransmissionBlockHeight types.LastTransmissionBlockHeight `protobuf:"bytes,12,opt,name=last_transmission_block_height,json=lastTransmissionBlockHeight,proto3" json:"last_transmission_block_height"`
	// flag indicating whether the consumer CCV module starts in pre-CCV state
	PreCCV   bool               `protobuf:"varint,13,opt,name=preCCV,proto3" json:"preCCV,omitempty"`
	Provider types.ProviderInfo `protobuf:"bytes,14,opt,name=provider,proto3" json:"provider"`
}

func (m *PrivateConsumerGenesisState) Reset()         { *m = PrivateConsumerGenesisState{} }
func (m *PrivateConsumerGenesisState) String() string { return proto.CompactTextString(m) }
func (*PrivateConsumerGenesisState) ProtoMessage()    {}
func (*PrivateConsumerGenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2db73a6057a27482, []int{0}
}
func (m *PrivateConsumerGenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivateConsumerGenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivateConsumerGenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PrivateConsumerGenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateConsumerGenesisState.Merge(m, src)
}
func (m *PrivateConsumerGenesisState) XXX_Size() int {
	return m.Size()
}
func (m *PrivateConsumerGenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateConsumerGenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateConsumerGenesisState proto.InternalMessageInfo

func (m *PrivateConsumerGenesisState) GetParams() types.ConsumerParams {
	if m != nil {
		return m.Params
	}
	return types.ConsumerParams{}
}

func (m *PrivateConsumerGenesisState) GetProviderClientId() string {
	if m != nil {
		return m.ProviderClientId
	}
	return ""
}

func (m *PrivateConsumerGenesisState) GetProviderChannelId() string {
	if m != nil {
		return m.ProviderChannelId
	}
	return ""
}

func (m *PrivateConsumerGenesisState) GetNewChain() bool {
	if m != nil {
		return m.NewChain
	}
	return false
}

func (m *PrivateConsumerGenesisState) GetMaturingPackets() []types.MaturingVSCPacket {
	if m != nil {
		return m.MaturingPackets
	}
	return nil
}

func (m *PrivateConsumerGenesisState) GetHeightToValsetUpdateId() []types.HeightToValsetUpdateID {
	if m != nil {
		return m.HeightToValsetUpdateId
	}
	return nil
}

func (m *PrivateConsumerGenesisState) GetOutstandingDowntimeSlashing() []types.OutstandingDowntime {
	if m != nil {
		return m.OutstandingDowntimeSlashing
	}
	return nil
}

func (m *PrivateConsumerGenesisState) GetPendingConsumerPackets() types.ConsumerPacketDataList {
	if m != nil {
		return m.PendingConsumerPackets
	}
	return types.ConsumerPacketDataList{}
}

func (m *PrivateConsumerGenesisState) GetLastTransmissionBlockHeight() types.LastTransmissionBlockHeight {
	if m != nil {
		return m.LastTransmissionBlockHeight
	}
	return types.LastTransmissionBlockHeight{}
}

func (m *PrivateConsumerGenesisState) GetPreCCV() bool {
	if m != nil {
		return m.PreCCV
	}
	return false
}

func (m *PrivateConsumerGenesisState) GetProvider() types.ProviderInfo {
	if m != nil {
		return m.Provider
	}
	return types.ProviderInfo{}
}

func init() {
	proto.RegisterType((*PrivateConsumerGenesisState)(nil), "interchain_security.ccv.consumer.v1.PrivateConsumerGenesisState")
}

func init() {
	proto.RegisterFile("interchain_security/ccv/consumer/v1/genesis.proto", fileDescriptor_2db73a6057a27482)
}

var fileDescriptor_2db73a6057a27482 = []byte{
	// 683 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x6f, 0xd3, 0x3c,
	0x18, 0x6f, 0xde, 0xf5, 0xed, 0x5a, 0xef, 0xfd, 0x53, 0x02, 0x9a, 0xa2, 0x56, 0x64, 0x05, 0x84,
	0x54, 0x21, 0x16, 0xd3, 0xee, 0xc0, 0x89, 0xcb, 0x3a, 0x89, 0xb5, 0x1a, 0xa2, 0xda, 0xc6, 0x90,
	0x38, 0x10, 0xb9, 0x8e, 0x97, 0x58, 0x4b, 0xec, 0xc8, 0x76, 0x52, 0x76, 0xe5, 0x13, 0xf0, 0x19,
	0xf8, 0x34, 0x3b, 0xee, 0xc8, 0x09, 0xa1, 0xed, 0x8b, 0xa0, 0x38, 0x4e, 0xb7, 0xc1, 0x56, 0x71,
	0xb3, 0xf3, 0xfc, 0xfe, 0xf8, 0xf9, 0xf5, 0xe9, 0x03, 0x06, 0x94, 0x29, 0x22, 0x70, 0x84, 0x28,
	0xf3, 0x25, 0xc1, 0x99, 0xa0, 0xea, 0x14, 0x62, 0x9c, 0x43, 0xcc, 0x99, 0xcc, 0x12, 0x22, 0x60,
	0x3e, 0x80, 0x21, 0x61, 0x44, 0x52, 0xe9, 0xa5, 0x82, 0x2b, 0x6e, 0x3f, 0xb9, 0x85, 0xe2, 0x61,
	0x9c, 0x7b, 0x15, 0xc5, 0xcb, 0x07, 0x9d, 0x17, 0x77, 0xe9, 0xe6, 0x03, 0x28, 0x23, 0x24, 0x48,
	0xe0, 0x2f, 0xe0, 0x5a, 0xb6, 0xd3, 0x55, 0x84, 0x05, 0x44, 0x24, 0x94, 0x29, 0x88, 0x66, 0x98,
	0x42, 0x75, 0x9a, 0x12, 0xe3, 0xd9, 0x81, 0x74, 0x86, 0x61, 0x4c, 0xc3, 0x48, 0xe1, 0x98, 0x12,
	0xa6, 0x24, 0xbc, 0x86, 0xce, 0x07, 0xd7, 0x6e, 0x86, 0xf0, 0xa8, 0x20, 0x60, 0x2e, 0x08, 0xc4,
	0x11, 0x62, 0x8c, 0xc4, 0x05, 0xca, 0x1c, 0x0d, 0xc4, 0x0d, 0x39, 0x0f, 0x63, 0x02, 0xf5, 0x6d,
	0x96, 0x1d, 0xc3, 0x20, 0x13, 0x48, 0x51, 0xce, 0x4c, 0xfd, 0x41, 0xc8, 0x43, 0xae, 0x8f, 0xb0,
	0x38, 0x99, 0xaf, 0x4f, 0x97, 0x34, 0x36, 0xa7, 0x82, 0x18, 0xd8, 0xc6, 0xaf, 0xe2, 0x8a, 0x26,
	0x44, 0x2a, 0x94, 0xa4, 0x25, 0xe0, 0xf1, 0xd7, 0x55, 0xd0, 0x9d, 0x0a, 0x9a, 0x23, 0x45, 0x46,
	0x26, 0x88, 0xd7, 0x65, 0xcc, 0x07, 0x0a, 0x29, 0x62, 0xef, 0x82, 0x46, 0x8a, 0x04, 0x4a, 0xa4,
	0x63, 0xf5, 0xac, 0xfe, 0xda, 0xf0, 0x99, 0x77, 0x57, 0xec, 0xf9, 0xc0, 0xab, 0x14, 0xa6, 0x9a,
	0xb1, 0x5d, 0x3f, 0xfb, 0xbe, 0x51, 0xdb, 0x37, 0x7c, 0xfb, 0x39, 0xb0, 0x53, 0xc1, 0x73, 0x1a,
	0x10, 0xe1, 0x97, 0xe9, 0xf9, 0x34, 0x70, 0xfe, 0xea, 0x59, 0xfd, 0xd6, 0x7e, 0xbb, 0xaa, 0x8c,
	0x74, 0x61, 0x1c, 0xd8, 0x1e, 0xb8, 0x7f, 0x85, 0x2e, 0xf3, 0x2a, 0xe0, 0x2b, 0x1a, 0x7e, 0x6f,
	0x01, 0x2f, 0x2b, 0xe3, 0xc0, 0xee, 0x82, 0x16, 0x23, 0x73, 0x5f, 0xbf, 0xcb, 0xa9, 0xf7, 0xac,
	0x7e, 0x73, 0xbf, 0xc9, 0xc8, 0x7c, 0x54, 0xdc, 0xed, 0x8f, 0xa0, 0x9d, 0x20, 0x95, 0x09, 0xca,
	0x42, 0x3f, 0x45, 0xf8, 0x84, 0x28, 0xe9, 0xac, 0xf6, 0x56, 0xfa, 0x6b, 0xc3, 0xcd, 0x65, 0xed,
	0xbc, 0x31, 0x9c, 0xa3, 0x83, 0xd1, 0x54, 0xb3, 0x4c, 0x47, 0xff, 0x57, 0x62, 0xe5, 0x57, 0x69,
	0x2b, 0xd0, 0x89, 0x48, 0x31, 0x15, 0xbe, 0xe2, 0x7e, 0x8e, 0x62, 0x49, 0x94, 0x9f, 0xa5, 0x01,
	0x52, 0xa4, 0x78, 0x73, 0x4b, 0x3b, 0x0d, 0x97, 0x39, 0xed, 0x6a, 0xf6, 0x21, 0x3f, 0xd2, 0xdc,
	0x77, 0x9a, 0x3a, 0xde, 0x31, 0x76, 0xeb, 0xd1, 0x6d, 0xd5, 0xc0, 0x3e, 0x05, 0x0f, 0x79, 0xa6,
	0xa4, 0x42, 0x2c, 0x28, 0x1a, 0x0b, 0xf8, 0x9c, 0x15, 0xbf, 0xae, 0x2f, 0x63, 0x24, 0x23, 0xca,
	0x42, 0x07, 0x68, 0x63, 0xb8, 0xcc, 0xf8, 0xed, 0x95, 0xc0, 0x8e, 0xe1, 0x1b, 0xd7, 0x2e, 0xff,
	0xbd, 0x74, 0x60, 0x94, 0x6d, 0x01, 0x9c, 0x94, 0x94, 0xb6, 0xd5, 0xdf, 0x67, 0x11, 0xec, 0x9a,
	0x9e, 0x93, 0xe1, 0x9f, 0xcd, 0x49, 0x41, 0xd9, 0x41, 0x0a, 0xed, 0x51, 0x59, 0xa5, 0xbb, 0x6e,
	0x94, 0x6f, 0x82, 0xa4, 0xfd, 0xd9, 0x02, 0x6e, 0x8c, 0xa4, 0xf2, 0x95, 0x40, 0x4c, 0x26, 0x54,
	0x4a, 0xca, 0x99, 0x3f, 0x8b, 0x39, 0x3e, 0xf1, 0xcb, 0x84, 0x9c, 0x7f, 0xb4, 0xf5, 0xcb, 0x65,
	0xd6, 0x7b, 0x48, 0xaa, 0xc3, 0x6b, 0x02, 0xdb, 0x05, 0xbf, 0x8c, 0xbf, 0x6a, 0x3c, 0xbe, 0x1b,
	0x62, 0xaf, 0x83, 0x46, 0x2a, 0xc8, 0x68, 0x74, 0xe4, 0xfc, 0xab, 0x67, 0xcc, 0xdc, 0xec, 0x09,
	0x68, 0x56, 0x33, 0xe9, 0xfc, 0xa7, 0x5f, 0xd1, 0x5f, 0xf6, 0x8a, 0xa9, 0xc1, 0x8e, 0xd9, 0x31,
	0x37, 0xb6, 0x0b, 0xfe, 0xa4, 0xde, 0xfc, 0xbb, 0xdd, 0x98, 0xd4, 0x9b, 0x8d, 0xf6, 0xea, 0xa4,
	0xde, 0x6c, 0xb6, 0x5b, 0xdb, 0xef, 0xcf, 0x2e, 0x5c, 0xeb, 0xfc, 0xc2, 0xb5, 0x7e, 0x5c, 0xb8,
	0xd6, 0x97, 0x4b, 0xb7, 0x76, 0x7e, 0xe9, 0xd6, 0xbe, 0x5d, 0xba, 0xb5, 0x0f, 0xaf, 0x42, 0xaa,
	0xa2, 0x6c, 0xe6, 0x61, 0x9e, 0x40, 0xcc, 0x65, 0xc2, 0x25, 0xbc, 0xb2, 0xdd, 0x5c, 0x2c, 0x86,
	0x7c, 0x0b, 0x7e, 0xba, 0xb9, 0x4e, 0xf5, 0x56, 0x9b, 0x35, 0xf4, 0x12, 0xd8, 0xfa, 0x19, 0x00,
	0x00, 0xff, 0xff, 0xc9, 0xce, 0x8e, 0xa3, 0x7f, 0x05, 0x00, 0x00,
}

func (m *PrivateConsumerGenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivateConsumerGenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PrivateConsumerGenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Provider.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x72
	if m.PreCCV {
		i--
		if m.PreCCV {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	{
		size, err := m.LastTransmissionBlockHeight.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x62
	{
		size, err := m.PendingConsumerPackets.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x5a
	if len(m.OutstandingDowntimeSlashing) > 0 {
		for iNdEx := len(m.OutstandingDowntimeSlashing) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutstandingDowntimeSlashing[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.HeightToValsetUpdateId) > 0 {
		for iNdEx := len(m.HeightToValsetUpdateId) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HeightToValsetUpdateId[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.MaturingPackets) > 0 {
		for iNdEx := len(m.MaturingPackets) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MaturingPackets[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.NewChain {
		i--
		if m.NewChain {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.ProviderChannelId) > 0 {
		i -= len(m.ProviderChannelId)
		copy(dAtA[i:], m.ProviderChannelId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ProviderChannelId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ProviderClientId) > 0 {
		i -= len(m.ProviderClientId)
		copy(dAtA[i:], m.ProviderClientId)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ProviderClientId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PrivateConsumerGenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = len(m.ProviderClientId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.ProviderChannelId)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if m.NewChain {
		n += 2
	}
	if len(m.MaturingPackets) > 0 {
		for _, e := range m.MaturingPackets {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.HeightToValsetUpdateId) > 0 {
		for _, e := range m.HeightToValsetUpdateId {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.OutstandingDowntimeSlashing) > 0 {
		for _, e := range m.OutstandingDowntimeSlashing {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	l = m.PendingConsumerPackets.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.LastTransmissionBlockHeight.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if m.PreCCV {
		n += 2
	}
	l = m.Provider.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PrivateConsumerGenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivateConsumerGenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivateConsumerGenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderClientId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderClientId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewChain", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NewChain = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaturingPackets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MaturingPackets = append(m.MaturingPackets, types.MaturingVSCPacket{})
			if err := m.MaturingPackets[len(m.MaturingPackets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeightToValsetUpdateId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeightToValsetUpdateId = append(m.HeightToValsetUpdateId, types.HeightToValsetUpdateID{})
			if err := m.HeightToValsetUpdateId[len(m.HeightToValsetUpdateId)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutstandingDowntimeSlashing", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutstandingDowntimeSlashing = append(m.OutstandingDowntimeSlashing, types.OutstandingDowntime{})
			if err := m.OutstandingDowntimeSlashing[len(m.OutstandingDowntimeSlashing)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingConsumerPackets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PendingConsumerPackets.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransmissionBlockHeight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LastTransmissionBlockHeight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreCCV", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PreCCV = bool(v != 0)
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Provider.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
