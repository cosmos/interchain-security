syntax = "proto3";

package interchain_security.ccv.v1;

option go_package = "github.com/cosmos/interchain-security/x/ccv/types";

import "gogoproto/gogo.proto";
import "tendermint/abci/types.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

// This packet is sent from parent chain to baby chain if the validator set for baby chain
// changes (due to new bonding/unbonding messages or slashing events)
// The acknowledgement from baby chain will be sent asynchronously once unbonding period is over,
// and this will function as `UnbondingOver` message for this packet.
message ValidatorSetChangePacketData {
  repeated .tendermint.abci.ValidatorUpdate validator_updates = 1
      [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"validator_updates\""];
}

// Status defines if the ccv channel is in one of the following states:
// UNINITIALIZED, INITIALIZING, VALIDATING, INVALID
enum Status {
  option (gogoproto.goproto_enum_prefix) = false;

  // Default State
  STATUS_UNINITIALIZED_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "UNINITIALIZED"];
  // channel is in handshake process
  STATUS_INITIALIZING = 1 [(gogoproto.enumvalue_customname) = "INITIALIZING"];
  // channel is open and validating
  STATUS_VALIDATING = 2 [(gogoproto.enumvalue_customname) = "VALIDATING"];
  // channel is invalid and can no longer process packets
  STATUS_INVALID = 3 [(gogoproto.enumvalue_customname) = "INVALID"];
}

// CreateChildChainProposal is a governance proposal on the parent chain to spawn a new child chain.
// If it passes, then all validators on the parent chain are expected to validate the child chain at spawn time
// or get slashed. It is recommended that spawn time occurs after the proposal end time.
message CreateChildChainProposal {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the proposed chain-id of the new child chain, must be different from all other child chain ids of the executing
  // parent chain.
  string chain_id = 3 [(gogoproto.moretags) = "yaml:\"chain_id\""];
  // the proposed client state of new child chain.
  // Since it contains no consensus information, this may be created before child chain is created.
  google.protobuf.Any client_state = 4 [(gogoproto.moretags) = "yaml:\"client_state\""];
  // genesis hash with no staking information included.
  bytes genesis_hash = 5 [(gogoproto.moretags) = "yaml:\"genesis_hash\""];
  // spawn time is the time on the parent chain at which the child chain genesis is finalized and all validators
  // will be responsible for starting their child chain validator node.
  google.protobuf.Timestamp spawn_time = 6
      [(gogoproto.moretags) = "yaml:\"spawn_time\"", (gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}
