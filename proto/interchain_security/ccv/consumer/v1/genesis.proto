syntax = "proto3";

package interchain_security.ccv.consumer.v1;

option go_package = "github.com/cosmos/interchain-security/x/ccv/consumer/types";

import "ibc/lightclients/tendermint/v1/tendermint.proto";
import "ibc/core/channel/v1/channel.proto";
import "gogoproto/gogo.proto";
import "interchain_security/ccv/consumer/v1/consumer.proto";
import "tendermint/abci/types.proto";

// GenesisState defines the CCV consumer chain genesis state
message GenesisState {
  Params params              = 1 [(gogoproto.nullable) = false];
  string provider_client_id  = 2;  // empty for a completely new chain
  string provider_channel_id = 3;  // empty for a completely new chain
  bool   new_chain           = 4;  // true for new chain GenesisState, false for chain restart.
  // ProviderClientState filled in on new chain, nil on restart.
  ibc.lightclients.tendermint.v1.ClientState provider_client_state = 5;
  // ProviderConsensusState filled in on new chain, nil on restart.
  ibc.lightclients.tendermint.v1.ConsensusState provider_consensus_state = 6;
  repeated MaturingVSCPacket                    maturing_packets         = 7 [(gogoproto.nullable) = false];
  repeated .tendermint.abci.ValidatorUpdate     initial_val_set          = 8 [(gogoproto.nullable) = false];
}

// UnbondingSequence defines the genesis information for each unbonding packet sequence.
message MaturingVSCPacket {
  uint64                     vscId          = 1;
  uint64                     maturity_time = 2;
}
