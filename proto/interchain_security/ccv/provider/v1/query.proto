syntax = "proto3";
package interchain_security.ccv.provider.v1;

option go_package = "github.com/cosmos/interchain-security/x/ccv/provider/types";

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "interchain_security/ccv/consumer/v1/genesis.proto";

service Query {
  // ConsumerGenesis queries the genesis state needed to start a consumer chain
  // whose proposal has been accepted
  rpc ConsumerGenesis(QueryConsumerGenesisRequest)
      returns (QueryConsumerGenesisResponse) {
    option (google.api.http).get =
        "/interchain_security/ccv/provider/consumer_genesis/{chain_id}";
  }

  // ConsumerChains queries active consumer chains supported by the provider
  // chain
  rpc ConsumerChains(QueryConsumerChainsRequest)
      returns (QueryConsumerChainsResponse) {
    option (google.api.http).get =
        "/interchain_security/ccv/provider/consumer_chains";
  }

  // PendingConsumerChainStarts queries pending consumer chain starts
  // rpc PendingConsumerChainStarts(PendingConsumerChainStarsRequest)
  //     returns (PendingConsumerChainStartResponse) {
  //   option (google.api.http).get =
  //       "/interchain_security/ccv/provider/pending_consumer_chain_starts";
  // }

  // // PendingConsumerChainStops queries pending consumer chain stops
  // rpc PendingConsumerChainStops(PendingConsumerChainStopsRequest)
  //     returns (PendingConsumerChainStopsResponse) {
  //   option (google.api.http).get =
  //       "/interchain_security/ccv/provider/pending_consumer_chain_stops";
  // }
}

message QueryConsumerGenesisRequest { string chain_id = 1; }

message QueryConsumerGenesisResponse {
  interchain_security.ccv.consumer.v1.GenesisState genesis_state = 1
      [ (gogoproto.nullable) = false ];
}

message QueryConsumerChainsRequest {}

message QueryConsumerChainsResponse { repeated string chain_ids = 1; }

message PendingConsumerChainStarsRequest {}

message PendingConsumerChainStartResponse { repeated string chain_ids = 1; }

message PendingConsumerChainStopsRequest {}

message PendingConsumerChainStopsResponse { repeated string chain_ids = 1; }
